function PlotWorkspace(handles)
    % Lấy dữ liệu từ GUI
    a2 = str2double(get(handles.edit_a2, 'String'));
    a3 = str2double(get(handles.edit_a3, 'String'));
    d_val = str2double(get(handles.edit_d, 'String'));
    theta1 = str2double(get(handles.edit_theta1, 'String')) * pi / 180;
    theta2 = str2double(get(handles.edit_theta2, 'String')) * pi / 180;
    theta3 = str2double(get(handles.edit_theta3, 'String')) * pi / 180;

    % Kiểm tra dữ liệu hợp lệ
    if isnan(a2) || isnan(a3) || isnan(d_val) || ...
       isnan(theta1) || isnan(theta2) || isnan(theta3)
        error('Please enter valid numerical values.');
    end

    % DH Table
    a = [0; a2; a3];
    alpha = [pi/2; 0; 0];
    d = [d_val; 0; 0];
    theta = [theta1; theta2; theta3];

    % Vẽ workspace
    axes(handles.Robot);
    theta1_m = 180 * pi / 180;
    theta2_m = 150 * pi / 180;
    theta1 = linspace(-theta1_m, theta1_m, 181);

    % Vẽ các mặt tròn biểu diễn workspace
    fill3([(a(1) + a(2)) * cos(theta1) 0], ...
          [(a(1) + a(2)) * sin(theta1) 0], ...
          zeros(1, 182), [113, 125, 140] / 255, 'FaceAlpha', 0.15);

    fill3([(a(1) + a(2)) * cos(theta1) 0], ...
          [(a(1) + a(2)) * sin(theta1) 0], ...
          d(1) * ones(1, 182), [113, 125, 140] / 255, 'FaceAlpha', 0.15);

    % Cài đặt hiển thị
    xlabel('X');
    ylabel('Y');
    zlabel('Z');
    axis equal;
    grid on;
    rotate3d on;
    hold off;
end

    
%     theta2 = linspace(0,theta2_m,181);
%     
%     fill3([robot.a(1)*cos(theta1_m)+robot.a(2)*cos(theta1_m+theta2) robot.a(1)*cos(theta1_m)],[robot.a(1)*sin(theta1_m)+robot.a(2)*sin(theta1_m+theta2) robot.a(1)*sin(theta1_m)],(robot.d(1)-d3_max)*ones(1,182),[113, 125, 140]/255,'FaceAlpha',0.15);
%     fill3([robot.a(1)*cos(theta1_m)+robot.a(2)*cos(theta1_m+theta2) robot.a(1)*cos(theta1_m)],[robot.a(1)*sin(theta1_m)+robot.a(2)*sin(theta1_m+theta2) robot.a(1)*sin(theta1_m)],robot.d(1)*ones(1,182),[113, 125, 140]/255,'FaceAlpha',0.15);
%     
%     theta2 = linspace(0,-theta2_m,181);
%     
%     fill3([robot.a(1)*cos(-theta1_m)+robot.a(2)*cos(-theta1_m+theta2) robot.a(1)*cos(-theta1_m)],[robot.a(1)*sin(-theta1_m)+robot.a(2)*sin(-theta1_m+theta2) robot.a(1)*sin(-theta1_m)],(robot.d(1)-d3_max)*ones(1,182),[113, 125, 140]/255,'FaceAlpha',0.15);
%     fill3([robot.a(1)*cos(-theta1_m)+robot.a(2)*cos(-theta1_m+theta2) robot.a(1)*cos(-theta1_m)],[robot.a(1)*sin(-theta1_m)+robot.a(2)*sin(-theta1_m+theta2) robot.a(1)*sin(-theta1_m)],robot.d(1)*ones(1,182),[113, 125, 140]/255,'FaceAlpha',0.15);
% 
% for i = 1:181
%     plot3([(robot.a(1)+robot.a(2))*cos(theta1(i)) (robot.a(1)+robot.a(2))*cos(theta1(i))],[(robot.a(1)+robot.a(2))*sin(theta1(i)) (robot.a(1)+robot.a(2))*sin(theta1(i))],[robot.d(1)-d3_max robot.d(1)],'c');
%     theta2 = linspace(0,theta2_m,181);
%     plot3([robot.a(1)*cos(theta1_m)+robot.a(2)*cos(theta1_m+theta2(i)) robot.a(1)*cos(theta1_m)+robot.a(2)*cos(theta1_m+theta2(i))],[robot.a(1)*sin(theta1_m)+robot.a(2)*sin(theta1_m+theta2(i)) robot.a(1)*sin(theta1_m)+robot.a(2)*sin(theta1_m+theta2(i))],[robot.d(1)-d3_max robot.d(1)],'c');
%     theta2 = linspace(0,-theta2_m,181);
%     plot3([robot.a(1)*cos(-theta1_m)+robot.a(2)*cos(-theta1_m+theta2(i)) robot.a(1)*cos(-theta1_m)+robot.a(2)*cos(-theta1_m+theta2(i))],[robot.a(1)*sin(-theta1_m)+robot.a(2)*sin(-theta1_m+theta2(i)) robot.a(1)*sin(-theta1_m)+robot.a(2)*sin(-theta1_m+theta2(i))],[robot.d(1)-d3_max robot.d(1)],'c');
% end
% 
% if (robot.a(1)-robot.a(2))>0
%     fill3((robot.a(1)-robot.a(2))*cos(-pi:0.1:pi),(robot.a(1)-robot.a(2))*sin(-pi:0.1:pi),(robot.d(1)-d3_max)*ones(1,63),'g','FaceAlpha',0.155);
%     fill3((robot.a(1)-robot.a(2))*cos(-pi:0.1:pi),(robot.a(1)-robot.a(2))*sin(-pi:0.1:pi),(robot.d(1))*ones(1,63),'g','FaceAlpha',0.155);
% end